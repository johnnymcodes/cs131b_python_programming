#!/usr/local/bin/python3

# CS131A final exam: Send in a plain text file that describes how and why
# this program produces the output that it does.
#
#Author: Johnny A Martinez
# ID: w10471082
# CS 131a
#


# 0. tools
from re import split
#urllib.request.urlopen reads the web page and returns it's contents it will be referred to as access in this script. 
from urllib.request import urlopen as access
#data structure Counter creates a counter of keys.
from collections import Counter


#
# 1. resources
# creates a list of words in the dictionary using the method set().read().
#split(\n) uses a newline as a delimeter
terms = set(open('/users/abrick/resources/english').read().split('\n'))



# material is being assigned the value of the url retreiving using urllib.request.urlopen() as access()
material = access('http://hills.ccsf.edu/~abrick/urantia').read().decode()
# creates a Counter Dictionary of words by spliting the contents of the webpage 
# using the regular expressio ?[\s.:¼°"-]+ as the delimeter
parts = Counter(split(r',?[\s.:¼°"-]+',material))


# 2. interpretations
#Returns the position of numbers in the text
def digits(text):
    try:
        return int(text.strip().replace(',',''))
    except ValueError:
        return 0


#returns position of word with most appearances
def appearance(text):
    #returns the counter value using the word as the argument
    return parts.get(text)

#returns position of word that is not in the dictionary and appears the most or returns 0
def surprise_appearance(text):
    return 0 if digits(text) or text.lower() in terms else parts.get(text)


# 3. analysis
findings = []

#cycles through words passing each word as a parameter for the list of functions as 'concern'
for concern in [appearance,len,digits,str,surprise_appearance]:
    # casts the value returned by max as a string then adds the word to the findings array.
    findings.append(str(max(parts,key=concern)))
print(' '.join(findings)+'.')

#str returns the word with the highest string value
